name: Collect Kubernetes Metrics

on:
  workflow_dispatch:
    inputs:
      kubernetes_version:
        description: 'Kubernetes version (e.g., v1.28.0)'
        required: true
        type: string

jobs:
  collect-metrics:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone Kubernetes repository
      run: |
        git clone --depth 1 --branch ${{ github.event.inputs.kubernetes_version }} https://github.com/kubernetes/kubernetes.git k8s-temp

    - name: Setup Go
      uses: actions/setup-go@v6
      with:
        go-version-file: 'k8s-temp/go.mod'

    - name: Run metrics documentation script
      run: |
        export TERM=xterm
        cd k8s-temp
        ./test/instrumentation/update-documentation-metrics.sh

    - name: Create instrumentations directory
      run: |
        mkdir -p instrumentations

    - name: Copy generated metrics file
      run: |
        cp k8s-temp/test/instrumentation/documentation/documentation-list.yaml instrumentations/${{ github.event.inputs.kubernetes_version }}.yaml

    - name: Clean up temporary files
      run: |
        rm -rf k8s-temp

    - name: Create pull request
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Create a new branch
        BRANCH_NAME="metrics/${{ github.event.inputs.kubernetes_version }}"
        git checkout -b "$BRANCH_NAME"

        # Add and commit changes
        git add instrumentations/${{ github.event.inputs.kubernetes_version }}.yaml
        git commit -m "Add Kubernetes ${{ github.event.inputs.kubernetes_version }} metrics documentation"

        # Push branch
        git push origin "$BRANCH_NAME"

        # Create pull request using GitHub CLI
        gh pr create \
          --title "Add Kubernetes ${{ github.event.inputs.kubernetes_version }} metrics documentation" \
          --body "Automatically generated metrics documentation for Kubernetes ${{ github.event.inputs.kubernetes_version }}" \
          --base main \
          --head "$BRANCH_NAME"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
